<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="8" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="193893" started-at="2018-04-13T10:20:51Z" finished-at="2018-04-13T10:24:04Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="193893" started-at="2018-04-13T10:20:51Z" finished-at="2018-04-13T10:24:04Z">
      <class name="com.qa.TestScripts.DataDrivenTest">
        <test-method status="PASS" signature="configBC()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="configBC" is-config="true" duration-ms="8143" started-at="2018-04-13T10:22:24Z" finished-at="2018-04-13T10:22:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="configBM" is-config="true" duration-ms="46911" started-at="2018-04-13T10:22:32Z" finished-at="2018-04-13T10:23:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="FAIL" signature="afterTest()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="afterTest" duration-ms="0" started-at="2018-04-13T10:23:19Z" finished-at="2018-04-13T10:23:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Test is not Executed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Test is not Executed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at com.qa.TestScripts.DataDrivenTest.afterTest(DataDrivenTest.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="startTest" is-config="true" duration-ms="0" started-at="2018-04-13T10:23:19Z" finished-at="2018-04-13T10:23:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.TestScripts.DataDrivenTest.afterTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="callGetTest(org.testng.ITestResult)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="callGetTest" is-config="true" duration-ms="1" started-at="2018-04-13T10:23:20Z" finished-at="2018-04-13T10:23:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=afterTest status=FAILURE method=DataDrivenTest.afterTest()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGetTest -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="configBM" is-config="true" duration-ms="22514" started-at="2018-04-13T10:23:21Z" finished-at="2018-04-13T10:23:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="excelTest" duration-ms="3578" started-at="2018-04-13T10:23:43Z" data-provider="getData" finished-at="2018-04-13T10:23:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Suraj]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pradhan]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[surajkk@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelTest -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="startTest" is-config="true" duration-ms="0" started-at="2018-04-13T10:23:43Z" finished-at="2018-04-13T10:23:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.TestScripts.DataDrivenTest.excelTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="callGetTest(org.testng.ITestResult)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="callGetTest" is-config="true" duration-ms="0" started-at="2018-04-13T10:23:47Z" finished-at="2018-04-13T10:23:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelTest status=SUCCESS method=DataDrivenTest.excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGetTest -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="configBM" is-config="true" duration-ms="1233" started-at="2018-04-13T10:23:47Z" finished-at="2018-04-13T10:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="startTest" is-config="true" duration-ms="0" started-at="2018-04-13T10:23:48Z" finished-at="2018-04-13T10:23:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.TestScripts.DataDrivenTest.excelTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="excelTest" duration-ms="2175" started-at="2018-04-13T10:23:48Z" data-provider="getData" finished-at="2018-04-13T10:23:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amber]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sahu]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[amber@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelTest -->
        <test-method status="PASS" signature="callGetTest(org.testng.ITestResult)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="callGetTest" is-config="true" duration-ms="0" started-at="2018-04-13T10:23:50Z" finished-at="2018-04-13T10:23:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelTest status=SUCCESS method=DataDrivenTest.excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGetTest -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="configBM" is-config="true" duration-ms="802" started-at="2018-04-13T10:23:50Z" finished-at="2018-04-13T10:23:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="startTest" is-config="true" duration-ms="0" started-at="2018-04-13T10:23:51Z" finished-at="2018-04-13T10:23:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.TestScripts.DataDrivenTest.excelTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="excelTest" duration-ms="2220" started-at="2018-04-13T10:23:51Z" data-provider="getData" finished-at="2018-04-13T10:23:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Babuli]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Behera]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[babuli@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelTest -->
        <test-method status="PASS" signature="callGetTest(org.testng.ITestResult)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="callGetTest" is-config="true" duration-ms="0" started-at="2018-04-13T10:23:53Z" finished-at="2018-04-13T10:23:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelTest status=SUCCESS method=DataDrivenTest.excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGetTest -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="configBM" is-config="true" duration-ms="770" started-at="2018-04-13T10:23:53Z" finished-at="2018-04-13T10:23:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="startTest" is-config="true" duration-ms="16" started-at="2018-04-13T10:23:54Z" finished-at="2018-04-13T10:23:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.TestScripts.DataDrivenTest.excelTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="excelTest" duration-ms="2236" started-at="2018-04-13T10:23:54Z" data-provider="getData" finished-at="2018-04-13T10:23:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Suman]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Nayak]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[suman@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelTest -->
        <test-method status="PASS" signature="callGetTest(org.testng.ITestResult)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="callGetTest" is-config="true" duration-ms="0" started-at="2018-04-13T10:23:56Z" finished-at="2018-04-13T10:23:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelTest status=SUCCESS method=DataDrivenTest.excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGetTest -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="configBM" is-config="true" duration-ms="802" started-at="2018-04-13T10:23:56Z" finished-at="2018-04-13T10:23:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="excelTest" duration-ms="2121" started-at="2018-04-13T10:23:57Z" data-provider="getData" finished-at="2018-04-13T10:23:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jagu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Das]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[jagu@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelTest -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="startTest" is-config="true" duration-ms="0" started-at="2018-04-13T10:23:57Z" finished-at="2018-04-13T10:23:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.TestScripts.DataDrivenTest.excelTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="callGetTest(org.testng.ITestResult)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="callGetTest" is-config="true" duration-ms="0" started-at="2018-04-13T10:23:59Z" finished-at="2018-04-13T10:23:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelTest status=SUCCESS method=DataDrivenTest.excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGetTest -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="configBM" is-config="true" duration-ms="837" started-at="2018-04-13T10:23:59Z" finished-at="2018-04-13T10:24:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="startTest" is-config="true" duration-ms="0" started-at="2018-04-13T10:24:00Z" finished-at="2018-04-13T10:24:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.TestScripts.DataDrivenTest.excelTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="excelTest" duration-ms="2199" started-at="2018-04-13T10:24:00Z" data-provider="getData" finished-at="2018-04-13T10:24:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Daaka]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Behera]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[daaka@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelTest -->
        <test-method status="PASS" signature="configAC()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="configAC" is-config="true" duration-ms="1975" started-at="2018-04-13T10:24:02Z" finished-at="2018-04-13T10:24:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
        <test-method status="PASS" signature="callGetTest(org.testng.ITestResult)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="callGetTest" is-config="true" duration-ms="0" started-at="2018-04-13T10:24:02Z" finished-at="2018-04-13T10:24:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelTest status=SUCCESS method=DataDrivenTest.excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGetTest -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@6b09bb57]" name="endTest" is-config="true" duration-ms="185" started-at="2018-04-13T10:24:04Z" finished-at="2018-04-13T10:24:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- com.qa.TestScripts.DataDrivenTest -->
      <class name="com.qa.TestScripts.Test1">
        <test-method status="PASS" signature="configBC()[pri:0, instance:com.qa.TestScripts.Test1@63753b6d]" name="configBC" is-config="true" duration-ms="10376" started-at="2018-04-13T10:20:51Z" finished-at="2018-04-13T10:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.qa.TestScripts.Test1@63753b6d]" name="configBM" is-config="true" duration-ms="74066" started-at="2018-04-13T10:21:01Z" finished-at="2018-04-13T10:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.qa.TestScripts.Test1@63753b6d]" name="startTest" is-config="true" duration-ms="16" started-at="2018-04-13T10:22:15Z" finished-at="2018-04-13T10:22:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.TestScripts.Test1.ATest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="ATest()[pri:0, instance:com.qa.TestScripts.Test1@63753b6d]" name="ATest" duration-ms="6005" started-at="2018-04-13T10:22:15Z" finished-at="2018-04-13T10:22:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ATest -->
        <test-method status="PASS" signature="callGetTest(org.testng.ITestResult)[pri:0, instance:com.qa.TestScripts.Test1@63753b6d]" name="callGetTest" is-config="true" duration-ms="0" started-at="2018-04-13T10:22:21Z" finished-at="2018-04-13T10:22:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ATest status=SUCCESS method=Test1.ATest()[pri:0, instance:com.qa.TestScripts.Test1@63753b6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGetTest -->
        <test-method status="PASS" signature="configAC()[pri:0, instance:com.qa.TestScripts.Test1@63753b6d]" name="configAC" is-config="true" duration-ms="2019" started-at="2018-04-13T10:22:21Z" finished-at="2018-04-13T10:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:com.qa.TestScripts.Test1@63753b6d]" name="endTest" is-config="true" duration-ms="641" started-at="2018-04-13T10:22:23Z" finished-at="2018-04-13T10:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- com.qa.TestScripts.Test1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
