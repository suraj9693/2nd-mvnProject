<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="82576" started-at="2018-04-13T09:56:52Z" finished-at="2018-04-13T09:58:14Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="82576" started-at="2018-04-13T09:56:52Z" finished-at="2018-04-13T09:58:14Z">
      <class name="com.qa.TestScripts.DataDrivenTest">
        <test-method status="PASS" signature="configBC()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="configBC" is-config="true" duration-ms="8957" started-at="2018-04-13T09:56:52Z" finished-at="2018-04-13T09:57:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="configBM" is-config="true" duration-ms="53029" started-at="2018-04-13T09:57:01Z" finished-at="2018-04-13T09:57:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="startTest" is-config="true" duration-ms="18" started-at="2018-04-13T09:57:54Z" finished-at="2018-04-13T09:57:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.TestScripts.DataDrivenTest.afterTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="afterTest()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="afterTest" duration-ms="31" started-at="2018-04-13T09:57:54Z" finished-at="2018-04-13T09:57:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Test is not Executed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Test is not Executed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at com.qa.TestScripts.DataDrivenTest.afterTest(DataDrivenTest.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="callGetTest(org.testng.ITestResult)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="callGetTest" is-config="true" duration-ms="0" started-at="2018-04-13T09:57:55Z" finished-at="2018-04-13T09:57:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=afterTest status=FAILURE method=DataDrivenTest.afterTest()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGetTest -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="configBM" is-config="true" duration-ms="755" started-at="2018-04-13T09:57:56Z" finished-at="2018-04-13T09:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="excelTest" duration-ms="2305" started-at="2018-04-13T09:57:57Z" data-provider="getData" finished-at="2018-04-13T09:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Suraj]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pradhan]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[surajkk@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelTest -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="startTest" is-config="true" duration-ms="0" started-at="2018-04-13T09:57:57Z" finished-at="2018-04-13T09:57:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.TestScripts.DataDrivenTest.excelTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="configBM" is-config="true" duration-ms="649" started-at="2018-04-13T09:57:59Z" finished-at="2018-04-13T09:57:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="callGetTest(org.testng.ITestResult)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="callGetTest" is-config="true" duration-ms="0" started-at="2018-04-13T09:57:59Z" finished-at="2018-04-13T09:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelTest status=SUCCESS method=DataDrivenTest.excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGetTest -->
        <test-method status="PASS" signature="excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="excelTest" duration-ms="1804" started-at="2018-04-13T09:57:59Z" data-provider="getData" finished-at="2018-04-13T09:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amber]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sahu]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[amber@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelTest -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="startTest" is-config="true" duration-ms="0" started-at="2018-04-13T09:57:59Z" finished-at="2018-04-13T09:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.TestScripts.DataDrivenTest.excelTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="callGetTest(org.testng.ITestResult)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="callGetTest" is-config="true" duration-ms="0" started-at="2018-04-13T09:58:01Z" finished-at="2018-04-13T09:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelTest status=SUCCESS method=DataDrivenTest.excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGetTest -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="configBM" is-config="true" duration-ms="570" started-at="2018-04-13T09:58:01Z" finished-at="2018-04-13T09:58:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="excelTest" duration-ms="2005" started-at="2018-04-13T09:58:02Z" data-provider="getData" finished-at="2018-04-13T09:58:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Babuli]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Behera]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[babuli@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelTest -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="startTest" is-config="true" duration-ms="0" started-at="2018-04-13T09:58:02Z" finished-at="2018-04-13T09:58:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.TestScripts.DataDrivenTest.excelTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="callGetTest(org.testng.ITestResult)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="callGetTest" is-config="true" duration-ms="0" started-at="2018-04-13T09:58:04Z" finished-at="2018-04-13T09:58:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelTest status=SUCCESS method=DataDrivenTest.excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGetTest -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="configBM" is-config="true" duration-ms="501" started-at="2018-04-13T09:58:04Z" finished-at="2018-04-13T09:58:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="startTest" is-config="true" duration-ms="0" started-at="2018-04-13T09:58:04Z" finished-at="2018-04-13T09:58:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.TestScripts.DataDrivenTest.excelTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="excelTest" duration-ms="1836" started-at="2018-04-13T09:58:04Z" data-provider="getData" finished-at="2018-04-13T09:58:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Suman]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Nayak]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[suman@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelTest -->
        <test-method status="PASS" signature="callGetTest(org.testng.ITestResult)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="callGetTest" is-config="true" duration-ms="0" started-at="2018-04-13T09:58:06Z" finished-at="2018-04-13T09:58:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelTest status=SUCCESS method=DataDrivenTest.excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGetTest -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="configBM" is-config="true" duration-ms="639" started-at="2018-04-13T09:58:06Z" finished-at="2018-04-13T09:58:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="startTest" is-config="true" duration-ms="0" started-at="2018-04-13T09:58:07Z" finished-at="2018-04-13T09:58:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.TestScripts.DataDrivenTest.excelTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="excelTest" duration-ms="1900" started-at="2018-04-13T09:58:07Z" data-provider="getData" finished-at="2018-04-13T09:58:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jagu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Das]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[jagu@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelTest -->
        <test-method status="PASS" signature="callGetTest(org.testng.ITestResult)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="callGetTest" is-config="true" duration-ms="0" started-at="2018-04-13T09:58:09Z" finished-at="2018-04-13T09:58:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelTest status=SUCCESS method=DataDrivenTest.excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGetTest -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="configBM" is-config="true" duration-ms="565" started-at="2018-04-13T09:58:09Z" finished-at="2018-04-13T09:58:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="excelTest" duration-ms="2174" started-at="2018-04-13T09:58:09Z" data-provider="getData" finished-at="2018-04-13T09:58:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Daaka]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Behera]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[daaka@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelTest -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="startTest" is-config="true" duration-ms="0" started-at="2018-04-13T09:58:09Z" finished-at="2018-04-13T09:58:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.TestScripts.DataDrivenTest.excelTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="callGetTest(org.testng.ITestResult)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="callGetTest" is-config="true" duration-ms="0" started-at="2018-04-13T09:58:11Z" finished-at="2018-04-13T09:58:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelTest status=SUCCESS method=DataDrivenTest.excelTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGetTest -->
        <test-method status="PASS" signature="configAC()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="configAC" is-config="true" duration-ms="2190" started-at="2018-04-13T09:58:11Z" finished-at="2018-04-13T09:58:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:com.qa.TestScripts.DataDrivenTest@467aecef]" name="endTest" is-config="true" duration-ms="585" started-at="2018-04-13T09:58:14Z" finished-at="2018-04-13T09:58:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- com.qa.TestScripts.DataDrivenTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
